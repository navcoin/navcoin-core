# The test build matrix (stage: test) is constructed to test a wide range of
# configurations, rather than a single pass/fail. This helps to catch build
# failures and logic errors that present on platforms other than the ones the
# author has tested.
#
# Some builders use the dependency-generator in `./depends`, rather than using
# apt-get to install build dependencies. This guarantees that the tester is
# using the same versions as Gitian, so the build results are nearly identical
# to what would be found in a final release.
#
# In order to avoid rebuilding all dependencies for each build, the binaries
# are cached and re-used when possible. Changes in the dependency-generator
# will trigger cache-invalidation and rebuilds as necessary.
#
# These caches can be manually removed if necessary. This is one of the very
# few manual operations that is possible with Travis, and it can be done by a
# Bitcoin Core GitHub member via the Travis web interface [0].
#
# Travis CI uploads the cache after the script phase of the build [1].
# However, the build is terminated without saving the chache if it takes over
# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail
# with an error and save the cache.
#
# [0] https://travis-ci.org/bitcoin/bitcoin/caches
# [1] https://docs.travis-ci.com/user/caching/#build-phases
# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts

dist: xenial
os: linux
language: minimal
cache:
  ccache: true
  directories:
    - depends/built
    - depends/sdk-sources
    - $HOME/.ccache
stages:
  - test
env:
  global:
    - MAKEJOBS=-j3
    - RUN_UNIT_TESTS=true
    - RUN_FUNCTIONAL_TESTS=true
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache python3 autoconf cmake"
    - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a maintainer to restart. The next run should not time out because the build cache has been saved."
before_install:
  - set -o errexit; source ci/test_03_before_install.sh
install:
  - set -o errexit; source ci/test_04_install.sh
before_script:
  - set -o errexit; source ci/test_05_before_script.sh
script:
  - export CONTINUE=1
  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ci/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
  - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ci/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG
jobs:
  include:

    - stage: test
      name: 'ARM  [GOAL: install]  [no tests]'
      env: >-
        HOST=arm-linux-gnueabihf
        PACKAGES="g++-arm-linux-gnueabihf"
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        GOAL="install"
        # -Wno-psabi is to disable ABI warnings: "note: parameter passing for argument of type ... changed in GCC 7.1"
        # This could be removed once the ABI change warning does not show up by default
        NAVCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi"

    - stage: test
      name: 'Win64  [GOAL: install]  [no functional tests]'
      env: >-
        HOST=x86_64-w64-mingw32
        PACKAGES="nsis g++-mingw-w64-x86-64 libcap-dev"
        RUN_FUNCTIONAL_TESTS=false
        GOAL="install"
        NAVCOIN_CONFIG="--disable-gcc-hardening --enable-reduce-exports --disable-gui-tests"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]'
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq"
        DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1"
        GOAL="install"
        NAVCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"

    - stage: test
      name: 'macOS 10.12  [GOAL: deploy] [no tests]'
      env: >-
        HOST=x86_64-apple-darwin18
        PACKAGES="imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools libcap-dev"
        OSX_SDK=10.15
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        GOAL="deploy"
        NAVCOIN_CONFIG="--enable-reduce-exports --enable-werror"
